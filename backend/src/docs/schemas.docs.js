/**
 * @swagger
 * components:
 *   schemas:
 *     User:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           description: The auto-generated id of the user
 *         name:
 *           type: string
 *           description: The user's full name
 *         email:
 *           type: string
 *           description: The user's email address
 *         username:
 *           type: string
 *           description: The user's username
 *         role:
 *           type: string
 *           enum: [USER, ADMIN]
 *           description: The user's role
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: The date the user was created
 *
 *     Post:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           description: The auto-generated id of the post
 *         title:
 *           type: string
 *           description: The post title
 *         content:
 *           type: string
 *           description: The post content

 *         authorId:
 *           type: string
 *           description: The ID of the post author
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: The date the post was created
 *         updatedAt:
 *           type: string
 *           format: date-time
 *           description: The date the post was last updated
 *         author:
 *           type: object
 *           properties:
 *             id:
 *               type: string
 *               description: The author's user ID
 *             name:
 *               type: string
 *               description: The author's name
 *             username:
 *               type: string
 *               description: The author's username
 *
 *     Comment:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           description: The auto-generated id of the comment
 *         content:
 *           type: string
 *           description: The content of the comment
 *         postId:
 *           type: string
 *           description: The ID of the post this comment belongs to
 *         userId:
 *           type: string
 *           description: The ID of the user who created the comment
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: The date the comment was created
 *         updatedAt:
 *           type: string
 *           format: date-time
 *           description: The date the comment was last updated
 *         author:
 *           type: object
 *           properties:
 *             id:
 *               type: string
 *               description: The author's user ID
 *             name:
 *               type: string
 *               description: The author's name
 *             username:
 *               type: string
 *               description: The author's username
 *
 *     ErrorResponse:
 *       type: object
 *       description: A problem details object (RFC 7807) for describing errors.
 *       required:
 *         - type
 *         - title
 *         - status
 *         - detail
 *         - instance
 *       properties:
 *         type:
 *           type: string
 *           format: uri
 *           description: >
 *             A URI reference that identifies the problem type. This URI should yield
 *             human-readable documentation for the problem type.
 *           example: /errors/validation-error
 *         title:
 *           type: string
 *           description: A short, human-readable summary of the problem type.
 *           example: Validation Error
 *         status:
 *           type: integer
 *           description: The HTTP status code generated by the origin server for this occurrence of the problem.
 *           example: 400
 *         detail:
 *           type: string
 *           description: A human-readable explanation specific to this occurrence of the problem.
 *           example: Input validation failed.
 *         instance:
 *           type: string
 *           format: uri
 *           description: A URI reference that identifies the specific occurrence of the problem.
 *           example: /api/users/register
 *       additionalProperties: true
 */
